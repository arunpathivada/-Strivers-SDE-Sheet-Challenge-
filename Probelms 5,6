problem 5
#include <bits/stdc++.h> 
void sort012(int *arr, int n)
{
     int low=0,high=n-1,mid=0;
     while(mid<=high){
        if(arr[mid]==1) mid++;
        else if(arr[mid]==0){
           swap(arr[mid],arr[low]);
           low++;
           mid++;
        }
        else{
            swap(arr[mid],arr[high]);
            high--;
        }
     }
}

problem 6

#include <bits/stdc++.h> 
int maximumProfit(vector<int> &prices){
    int low =0,high = 1,maxprofit=0;
        while(high<prices.size()){
            if(prices[low]<prices[high]){
                maxprofit = max(maxprofit,prices[high]-prices[low]);
            }
            else{
                low=high;
            }
            high++;
        }
        return maxprofit;
}
